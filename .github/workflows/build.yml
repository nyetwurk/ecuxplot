---
name: Build ECUxPlot Multi-Platform

on:
  push:
    branches: [ master, main ]
# TEMPORARY: Building all installers on every push for testing
# TO RESTORE DEFAULT: Uncomment the tags and pull_request sections
#     tags: [ 'v*' ]
#   pull_request:
#     branches: [ master, main ]

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up JDK 18
      uses: actions/setup-java@v5
      with:
        java-version: '18'
        distribution: 'temurin'

    - name: Install Make
      run: |
        brew install make
        echo "/opt/homebrew/bin" >> $GITHUB_PATH

    - name: Install Ant
      run: |
        brew install ant
        echo "/opt/homebrew/bin" >> $GITHUB_PATH

    - name: Build macOS targets
      run: |
        make mac-zip
        make dmg
      env:
        DISPLAY: ""

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          build/*.zip
          build/*.dmg
          ECUxPlot-*.jar
          mapdump.jar

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 18
      uses: actions/setup-java@v4
      with:
        java-version: '18'
        distribution: 'temurin'

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y make ant nsis

    - name: Build all targets
      run: |
        make all
        make win-installer
        make exes

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          build/*setup.exe
          build/*.exe
          ECUxPlot-*.jar
          mapdump.jar

  build-all-platforms:
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          macos-builds/*
          linux-builds/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
