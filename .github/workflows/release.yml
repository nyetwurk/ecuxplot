---
name: Release Build

on:
  push:
    tags: [ 'v*' ]

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up JDK 18
      uses: actions/setup-java@v5
      with:
        java-version: '18'
        distribution: 'temurin'

    - name: Install Make
      run: |
        brew install make
        echo "/opt/homebrew/bin" >> $GITHUB_PATH

    - name: Build macOS targets
      run: |
        make mac-zip
        make dmg
      env:
        DISPLAY: ""

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          build/*.zip
          build/*.dmg
          ECUxPlot-*.jar
          mapdump.jar

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Set up JDK 18
      uses: actions/setup-java@v5
      with:
        java-version: '18'
        distribution: 'temurin'

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y make ant nsis mingw-w64 binutils-mingw-w64
        # Install Launch4j manually (not available in Ubuntu repos)
        # Version managed by scripts/update-launch4j-version.sh
        LAUNCH4J_VERSION=launch4j-3.50
        wget -O /tmp/launch4j.tar.gz "https://sourceforge.net/projects/launch4j/files/launch4j-3/${LAUNCH4J_VERSION}/launch4j-${LAUNCH4J_VERSION}-linux-x64.tgz/download"
        tar -xzf /tmp/launch4j.tar.gz -C /tmp
        sudo mv /tmp/launch4j-${LAUNCH4J_VERSION} /opt/launch4j
        sudo ln -sf /opt/launch4j/launch4j /usr/local/bin/launch4j wget unzip
        # Install Launch4j
        wget -O /tmp/launch4j.tar.gz https://sourceforge.net/projects/launch4j/files/launch4j-3/3.50/launch4j-3.50-linux-x64.tgz/download
        tar -xzf /tmp/launch4j.tar.gz -C /tmp
        sudo mv /tmp/launch4j-3.50 /opt/launch4j
        sudo ln -sf /opt/launch4j/launch4j /usr/local/bin/launch4j
        echo "/opt/launch4j" >> $GITHUB_PATH

    - name: Build Linux/Windows installers
      run: |
        make installers

    - name: Upload Linux/Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-windows-builds
        path: |
          build/*.tar.gz
          build/*setup.exe
          build/*.exe
          ECUxPlot-*.jar
          mapdump.jar

  create-release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-linux]
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v5

    - name: Create release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          macos-builds/*
          linux-windows-builds/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
