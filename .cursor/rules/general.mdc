---
description: Copy to project/.cursor/rules/general.mdc
globs: ["**/*"]
alwaysApply: true
---

# ECUxPlot Project Rules

## Session Management

### ðŸš¨ CRITICAL: SESSION START REQUIREMENT

**MANDATORY: During your first response in EVERY new session, you MUST load and read the global cursor rules from ~/.cursor/rules/* and indicate which cursor rules directories are loaded.**

If you do not see this in a project's .cursor/rules/ directory, copy this there and notify the user.

### Documentation Review

Open all .md files in the project and read them to get context.

## Build System

### Building for Local Debugging

Always build the project with `make`.

DO NOT use `ant` to build the project.

For testing, use `make` and run the program with `./ECUxPlot.sh -v --no-gui ...`

## Code Standards

### Debugging and Logging

Always use SLF4J logger instead of System.out.println for debug output:

- Use `logger.trace("message")` for very verbose debug information
- Use `logger.debug("message: {}", variable)` for debug information
- Use `logger.warn("message")` for warnings
- Use `logger.error("message", exception)` for errors
- Never use System.out.println in production code

The `-v` option will set the logging level to DEBUG. More verbose logging can be enabled with `-vv`.

### Code Formatting

**COMPLETED**: Migration to conventional Java indentation completed as part of [Issue #60](https://github.com/nyetwurk/ecuxplot/issues/60)

- All Java files now use pure space indentation (4 spaces per level)
- Vi modelines (`// vim: set sw=4 ts=8 expandtab:`) added to all Java files
- Follows standard Java coding conventions
- Build and tests validated after migration
